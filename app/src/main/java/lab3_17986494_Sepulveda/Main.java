/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package lab3_17986494_Sepulveda;

import java.util.InputMismatchException;
import java.util.Scanner;

//import lab3_17986494_Sepulveda.System_17986494_Sepulveda;

public class Main {
    public static void main(String[] args) {        
        System_17986494_Sepulveda mySystem = new System_17986494_Sepulveda();
        
        menuFirst(mySystem);
        
    }
    
    private static void menuFirst(System_17986494_Sepulveda sys){
        Scanner input = new Scanner(System.in);
        int MENU_EXIT_OPTION = 2;
        int choice;
        do {
            Menus_17986494_Sepulveda.printMenuFirst();

            do {
                try {
                    choice = input.nextInt();
                    switch (choice) {
                        case 1:
                            Scanner myObj = new Scanner(System.in); 
                            System.out.println("Ingrese nombre de usuario administrador: ");
                            String userName = myObj.nextLine();
                            sys.registerUser(userName, true);
                            sys.systemLogin(sys.getAdmin());
                            menuAdmin(sys);
                            break;
                        case 2:
                            System.out.println("Ok! Muchas gracias por usar nuestro sistema");
                            System.exit(0);
                            break;
                        default:
                            System.out.println(choice + " No es una opción válida! Por favor inténtelo de nuevo.");
                            System.out.print("\nIngrese opcion: ");
                    }
                } catch (InputMismatchException e) {
                    System.out.println("Recuerde ingresar opciones numéricas. Por favor inténtelo de nuevo.");
                    System.out.print("\nIngrese opcion: ");
                    input.nextLine();
                }
            } while (true); // Continuar hasta que se ingrese una entrada válida
        } while (choice != MENU_EXIT_OPTION);   
    }

    
    private static void menuAdmin(System_17986494_Sepulveda sys){
        Scanner input = new Scanner(System.in);
        int MENU_EXIT_OPTION = 8;
        int choice;
        do {
            do{
                Menus_17986494_Sepulveda.printMenuAdmin();
                try{
                    choice = input.nextInt();
                    switch (choice){
                        case 1:
                            menuCrear(sys);              //Menu para crear componentes nuevos
                            break;
                        case 2:
                            menuModificar(sys);          //Menu para modificar componentes existentes
                            break;
                        case 3:
                            menuAgregar(sys);           //Menu para agregar componentes disponibles
                            break;                        
                        case 4:
                            menuInteract(sys,true);//Menu para interactuar con chatbots
                            break;
                        case 5:
                            //Registrar un usuario nuevo
                            Scanner myObj = new Scanner(System.in); 
                            System.out.println("Ingrese nombre de nuevo usuario: ");
                            String userName = myObj.nextLine();
                            try{
                                sys.registerUser(userName, false);
                                System.out.println("Usuario " + userName + " registrado!");
                            }catch(IllegalArgumentException e) {
                                System.out.println("No puede registrar al mismo usuario dos veces!");
                            }
                            break;
                        case 6:
                            System.out.println("\nListado de usuarios registrados: \n");
                            sys.registeredUsers();  //Mostrar usuarios registrados
                            System.out.println("");
                            break;
                        case 7:
                            sys.systemLogout();           //Cerrar sesión
                            System.out.println("Ok! Cerrando sesión...\n");
                            menuMain(sys);
                            break;
                        case 8:
                            System.out.println("Ok! Muchas gracias por usar nuestro sistema");
                            System.exit(0);
                            break;
                        default:
                            System.out.println(choice + " No es una opción válida! Por favor inténtelo de nuevo.");  
                            System.out.print("\nIngrese opcion: ");
                    }
                }catch(InputMismatchException  e){
                    System.out.println("Recuerde ingresar opciones numéricas. Por favor inténtelo de nuevo."); 
                    System.out.print("\nIngrese opcion: ");
                    input.nextLine();
                }
            }while (true);       
        } while (choice != MENU_EXIT_OPTION);   
    }

    private static void menuMain(System_17986494_Sepulveda sys){
        Scanner input = new Scanner(System.in);
        int MENU_EXIT_OPTION = 2;
        int choice;
        do {    
            Menus_17986494_Sepulveda.printMenuMain();

            do {
                try {
                    choice = input.nextInt();
                    switch (choice){
                         //Iniciar sesión
                         case 1:
                             Scanner myObj = new Scanner(System.in); 
                             System.out.println("Ingrese nombre de usuario: ");
                             String userName = myObj.nextLine();
                             sys.systemLogin(sys.getUser(userName));
                             //Dependiendo si inicia sesión el administrador o un usuario
                             //Se deriva a menus distintos
                             if (sys.isLogAdmin()){
                                 menuAdmin(sys);
                             }else{
                                 menuInteract(sys,false);
                             }
                             break;
                         //Salir
                         case 2:
                             System.out.println("Ok! Muchas gracias por usar nuestro sistema");
                             System.exit(0);
                             break;
                         default:
                             System.out.println(choice + " No es una opción válida! Por favor inténtelo de nuevo.");     
                             System.out.print("\nIngrese opcion: ");
                     }
                } catch (InputMismatchException e) {
                    System.out.println("Recuerde ingresar opciones numéricas. Por favor inténtelo de nuevo.");
                    System.out.print("\nIngrese opcion: ");
                    input.nextLine();
                }
            } while (true); // Continuar hasta que se ingrese una entrada válida
        } while (choice != MENU_EXIT_OPTION);   
    }
       
    private static void menuInteract(System_17986494_Sepulveda sys,boolean isAdmin){
        Scanner input = new Scanner(System.in);
        int MENU_EXIT_OPTION = 4;
        int choice;
        int maxInters;
        boolean returnToPrevMenu = false;
        do {    
            Menus_17986494_Sepulveda.printMenuInteract(isAdmin);
            do {
                try {
                    choice = input.nextInt();
                    switch (choice) {
                        //Conversación
                        case 1:                            
                            sys.systemInteraction();
                            break;
                        //Simulacion
                        case 2:    
                            System.out.print("Ingrese el número máximo de interacciones deseadas: ");
                            Scanner input2 = new Scanner(System.in);                   
                            maxInters = input2.nextInt();
                            break;
                        //Sintesis
                        case 3:
                            System.out.print("3. Solicitar síntesis de mis conversaciones\n");
                            break;
                        case 4:
                            //Si el menu es visto por un usuario normal, esta opción cierra sesión
                            //para volver a menuMain()
                            if (!isAdmin){
                                sys.systemLogout();
                            }
                            //Por otro lado, si es admin, con esta opción volverá a menuAdmin()
                            returnToPrevMenu = true;
                            break;
                        default:
                            System.out.println(choice + " No es una opción válida! Por favor inténtelo de nuevo.");      
                            System.out.print("\nIngrese opcion: ");
                    }
                } catch (InputMismatchException e) {
                    System.out.println("Recuerde ingresar opciones numéricas. Por favor inténtelo de nuevo.");
                    System.out.print("\nIngrese opcion: ");
                    input.nextLine();
                }
            } while (true); // Continuar hasta que se ingrese una entrada válida            
        } while (choice != MENU_EXIT_OPTION && !returnToPrevMenu);
    }

    private static void menuCrear(System_17986494_Sepulveda sys){
        Scanner input = new Scanner(System.in);
        int MENU_EXIT_OPTION = 4;
        int choice = 0;
        boolean returnToPrevMenu = false;
        do {    
            Menus_17986494_Sepulveda.printMenuCrear();
            try {
                choice = input.nextInt();
                switch (choice){
                    case 1:
                        //Creación de chatbots. Difiere si es el primer chatbot o ya existen más en el sistema
                        if (sys.getChatbots().isEmpty()){
                            MenusCrear_17986494_Sepulveda.menuCrearChatbot(sys,true);
                        }else{
                            MenusCrear_17986494_Sepulveda.menuCrearChatbot(sys,false);
                        }
                        break;
                    case 2:
                        MenusCrear_17986494_Sepulveda.menuCrearFlow(sys);
                        break;
                    case 3:
                        MenusCrear_17986494_Sepulveda.menuCrearOption(sys);
                        break;
                    case 4:
                        returnToPrevMenu = true;
                        break;
                    default:
                        System.out.println(choice + " No es una opción válida! Por favor inténtelo de nuevo.");     
                        //System.out.print("\nIngrese opcion: ");
                }
            } catch (InputMismatchException e) {
                System.out.println("Recuerde ingresar opciones numéricas. Por favor inténtelo de nuevo.");
                //System.out.print("\nIngrese opcion: ");
                input.nextLine(); //Limíar buffer de entrada
            }
        } while (choice != MENU_EXIT_OPTION && !returnToPrevMenu);
    }

    private static void menuModificar(System_17986494_Sepulveda sys){
        Scanner input = new Scanner(System.in);
        int MENU_EXIT_OPTION = 4;
        int choice;
        boolean returnToPrevMenu = false;
        do {    
            Menus_17986494_Sepulveda.printMenuModificar();            
            do {
                try {
                    choice = input.nextInt();
                    switch (choice){
                        case 1:
                            //MenusComponentes_17986494_Sepulveda.menuModificarChatbot(sys);
                            break;
                        case 2:
                            //MenusComponentes_17986494_Sepulveda.menuModificarFlow(sys);
                            break;
                        case 3:
                            //MenusComponentes_17986494_Sepulveda.menuModificarOption(sys);
                            break;
                        case 4:
                            returnToPrevMenu = true;
                            break;
                        default:
                            System.out.println(choice + " No es una opción válida! Por favor inténtelo de nuevo.");     
                            System.out.print("\nIngrese opcion: ");
                    }
                } catch (InputMismatchException e) {
                    System.out.println("Recuerde ingresar opciones numéricas. Por favor inténtelo de nuevo.");
                    System.out.print("\nIngrese opcion: ");
                    input.nextLine();
                }
            } while (true); // Continuar hasta que se ingrese una entrada válida
        } while (choice != MENU_EXIT_OPTION && !returnToPrevMenu);
    }

    private static void menuAgregar(System_17986494_Sepulveda sys){
        Scanner input = new Scanner(System.in);
        int MENU_EXIT_OPTION = 4;
        int choice;
        boolean returnToPrevMenu = false;
        do {    
            Menus_17986494_Sepulveda.printMenuCrear();            
            do {
                try {
                    choice = input.nextInt();
                    switch (choice){
                        case 1:
                            MenusAgregar_17986494_Sepulveda.menuAgregarChatbot(sys);
                            break;
                        case 2:
                            MenusAgregar_17986494_Sepulveda.menuAgregarFlow(sys);
                            break;
                        case 3:
                            MenusAgregar_17986494_Sepulveda.menuAgregarOption(sys);
                            break;
                        case 4:
                            returnToPrevMenu = true;
                            break;
                        default:
                            System.out.println(choice + " No es una opción válida! Por favor inténtelo de nuevo.");     
                            System.out.print("\nIngrese opcion: ");
                    }
                } catch (InputMismatchException e) {
                    System.out.println("Recuerde ingresar opciones numéricas. Por favor inténtelo de nuevo.");
                    System.out.print("\nIngrese opcion: ");
                    input.nextLine();
                }
            } while (true); // Continuar hasta que se ingrese una entrada válida
        } while (choice != MENU_EXIT_OPTION && !returnToPrevMenu);
    }    
    
}
